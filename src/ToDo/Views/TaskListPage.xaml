<Page x:Class="ToDo.Views.TaskListPage"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:controls="using:ToDo.Controls"
	  xmlns:converters="using:ToDo.Converters"
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	  xmlns:local="using:ToDo.Views"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:uen="using:Uno.Extensions.Navigation.UI"
	  xmlns:uer="using:Uno.Extensions.Reactive.UI"
	  xmlns:um="using:Uno.Material"
	  xmlns:utu="using:Uno.Toolkit.UI"
	  NavigationCacheMode="Required"
	  mc:Ignorable="d">

	<Page.Resources>
		<x:String x:Key="Icon_Add">F1 M 14 8 L 8 8 L 8 14 L 6 14 L 6 8 L 0 8 L 0 6 L 6 6 L 6 0 L 8 0 L 8 6 L 14 6 L 14 8 Z</x:String>
		<x:String x:Key="Icon_Delete_Outline">F1 M 1 16 C 1 17.100000023841858 1.899999976158142 18 3 18 L 11 18 C 12.100000023841858 18 13 17.100000023841858 13 16 L 13 4 L 1 4 L 1 16 Z M 3 6 L 11 6 L 11 16 L 3 16 L 3 6 Z M 10.5 1 L 9.5 0 L 4.5 0 L 3.5 1 L 0 1 L 0 3 L 14 3 L 14 1 L 10.5 1 Z</x:String>
		<x:String x:Key="Icon_Drive_File_Rename_Outline">F1 M 15.40999984741211 1.7950000762939453 L 14.200000762939453 0.5849999785423279 C 13.420000791549683 -0.19499999284744263 12.149999856948853 -0.19499999284744263 11.369999885559082 0.5849999785423279 L 8.6899995803833 3.2649998664855957 L 0 11.954999923706055 L 0 15.994999885559082 L 4.039999961853027 15.994999885559082 L 12.779999732971191 7.255000114440918 L 15.40999984741211 4.625 C 16.19999986886978 3.8450000286102295 16.19999986886978 2.575000047683716 15.40999984741211 1.7950000762939453 L 15.40999984741211 1.7950000762939453 Z M 3.2100000381469727 13.994999885559082 L 2 13.994999885559082 L 2 12.785000801086426 L 10.65999984741211 4.125 L 11.869999885559082 5.335000038146973 L 3.2100000381469727 13.994999885559082 Z M 8 15.994999885559082 L 12 11.994999885559082 L 18 11.994999885559082 L 18 15.994999885559082 L 8 15.994999885559082 Z</x:String>
		<x:String x:Key="Icon_Star_Rate">F1 M 12.430000305175781 8 L 10 0 L 7.569999694824219 8 L 0 8 L 6.180000305175781 12.40999984741211 L 3.8299999237060547 20 L 10 15.309999465942383 L 16.18000030517578 20 L 13.829999923706055 12.40999984741211 L 20 8 L 12.430000305175781 8 Z</x:String>

		<!--  note: in order to use converter in Page.Background, that resource needs to be declared globally.  -->
		<converters:TaskListToValueConverter x:Key="TaskListSurfaceBrushConverter"
											 DefaultValue="{ThemeResource PrimaryVariantLightBrush}"
											 ImportantValue="{ThemeResource ErrorBrush}"
											 TasksValue="{ThemeResource PrimaryVariantLightBrush}" />
		<converters:TaskListToValueConverter x:Key="TaskListVisibilityConverter"
											 DefaultValue="Visible"
											 ImportantValue="Collapsed"
											 TasksValue="Collapsed" />

		<converters:FormatConverter x:Key="TaskDueDateFormatter"
									x:Uid="TaskListPage_TaskDueDateFormatter"
									Format="ddd, d MMM" />

		<Style x:Key="TaskListViewStyle"
			   BasedOn="{StaticResource ListViewStyle}"
			   TargetType="ListView">
			<Setter Property="ItemsPanel">
				<Setter.Value>
					<ItemsPanelTemplate>
						<ItemsStackPanel Orientation="Vertical" />
					</ItemsPanelTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="ItemTemplate">
				<Setter.Value>
					<DataTemplate>
						<SwipeControl Margin="0,5">
							<SwipeControl.RightItems>
								<SwipeItems Mode="Reveal">
									<SwipeItem Background="{ThemeResource ErrorBrush}"
											   Foreground="{ThemeResource SurfaceBrush}">
										<SwipeItem.IconSource>
											<PathIconSource Data="{StaticResource Icon_Delete_Outline}" />
										</SwipeItem.IconSource>
									</SwipeItem>
								</SwipeItems>
							</SwipeControl.RightItems>
							<SwipeControl.Content>
								<utu:AutoLayout Background="{ThemeResource OnPrimaryBrush}"
												PrimaryAxisAlignment="Center">
									<utu:AutoLayout Orientation="Horizontal"
													Spacing="5">
										<utu:AutoLayout Padding="10,0,0,0"
														utu:AutoLayout.CounterAlignment="Center">
											<utu:AutoLayout utu:AutoLayout.CounterAlignment="Start"
															utu:AutoLayout.CounterLength="40"
															Orientation="Horizontal"
															Spacing="16">
												<CheckBox utu:AutoLayout.CounterAlignment="Start"
														  Command="{controls:AncestralBinding Path=ToggleIsCompleted,
													                                    AncestorType=uer:FeedView}"
														  CommandParameter="{Binding}"
														  IsChecked="{Binding IsCompleted}"
														  Style="{StaticResource CheckBoxStyle}" />
											</utu:AutoLayout>
										</utu:AutoLayout>
										<utu:AutoLayout utu:AutoLayout.CounterAlignment="Center"
														utu:AutoLayout.CounterLength="60"
														utu:AutoLayout.PrimaryAlignment="Stretch">
											<utu:AutoLayout utu:AutoLayout.PrimaryLength="60"
															PrimaryAxisAlignment="Center">
												<utu:AutoLayout utu:AutoLayout.CounterAlignment="Start"
																PrimaryAxisAlignment="Center">
													<TextBlock utu:AutoLayout.CounterAlignment="Start"
															   Foreground="{ThemeResource OnSurfaceBrush}"
															   MaxLines="1"
															   Style="{StaticResource TitleMedium}"
															   Text="{Binding Title}" />
													<TextBlock utu:AutoLayout.CounterAlignment="Start"
															   Foreground="{ThemeResource OnSurfaceBrush}"
															   Style="{StaticResource BodyMedium}"
															   Text="{Binding DueDateTime.DateTime, Converter={StaticResource TaskDueDateFormatter}}"
															   Visibility="{Binding DueDateTime.DateTime, Converter={StaticResource IsNotNull}}" />
												</utu:AutoLayout>
											</utu:AutoLayout>
										</utu:AutoLayout>
										<utu:AutoLayout Padding="0,0,10,0"
														utu:AutoLayout.CounterAlignment="Center"
														Orientation="Horizontal">
											<utu:AutoLayout Orientation="Horizontal"
															PrimaryAxisAlignment="End">
												<ToggleButton utu:AutoLayout.CounterAlignment="Start"
															  Command="{controls:AncestralBinding Path=ToggleIsImportant,
													                                    AncestorType=uer:FeedView}"
															  CommandParameter="{Binding}"
															  IsChecked="{Binding IsImportant}"
															  Style="{StaticResource IconToggleButtonStyle}">
													<ToggleButton.Content>
														<PathIcon Data="{StaticResource Icon_Star_Rate}"
																  Foreground="{StaticResource OnSurfaceLowBrush}" />
													</ToggleButton.Content>
													<um:ControlExtensions.AlternateContent>
														<PathIcon Data="{StaticResource Icon_Star_Rate}"
																  Foreground="{StaticResource ErrorBrush}" />
													</um:ControlExtensions.AlternateContent>
												</ToggleButton>
											</utu:AutoLayout>
										</utu:AutoLayout>
									</utu:AutoLayout>
								</utu:AutoLayout>
							</SwipeControl.Content>
						</SwipeControl>
					</DataTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Page.Resources>

	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition x:Name="TaskListColumn"
							  Width="*" />
			<ColumnDefinition x:Name="TaskColumn"
							  Width="0" />
		</Grid.ColumnDefinitions>

		<utu:AutoLayout Background="{Binding Entity.Value, Converter={StaticResource TaskListSurfaceBrushConverter}}">
			<utu:AutoLayout utu:AutoLayout.PrimaryAlignment="Stretch">
				<!-- TODO: https://github.com/unoplatform/uno.toolkit.ui/issues/381
					 Converters not working on NavigationBar iOS and Android -->
				<utu:NavigationBar Background="{Binding Entity.Value, Converter={StaticResource TaskListSurfaceBrushConverter}}"
								   Content="{Binding Entity.DisplayName}"
								   Foreground="{ThemeResource OnPrimaryBrush}"
								   Style="{StaticResource NavigationBarStyle}">
					<utu:NavigationBar.MainCommand>
						<AppBarButton Foreground="{ThemeResource OnPrimaryBrush}">
							<AppBarButton.Icon>
								<BitmapIcon UriSource="ms-appx:///ToDo/Assets/Icons/back.png" />
							</AppBarButton.Icon>
						</AppBarButton>
					</utu:NavigationBar.MainCommand>
					<utu:NavigationBar.PrimaryCommands>
						<AppBarButton Command="{Binding RenameList}"
									  Foreground="{ThemeResource OnPrimaryBrush}"
									  Visibility="{Binding Entity.Value, Converter={StaticResource TaskListVisibilityConverter}}">
							<AppBarButton.Icon>
								<BitmapIcon UriSource="ms-appx:///ToDo/Assets/Icons/drive_file_rename_outline.png" />
							</AppBarButton.Icon>
						</AppBarButton>
						<AppBarButton Command="{Binding DeleteList}"
									  Foreground="{ThemeResource OnPrimaryBrush}"
									  Visibility="{Binding Entity.Value, Converter={StaticResource TaskListVisibilityConverter}}">
							<AppBarButton.Icon>
								<BitmapIcon UriSource="ms-appx:///ToDo/Assets/Icons/delete_outline.png" />
							</AppBarButton.Icon>
						</AppBarButton>
					</utu:NavigationBar.PrimaryCommands>
				</utu:NavigationBar>
				<Grid uen:Region.Attached="True"
					  utu:AutoLayout.CounterAlignment="Stretch"
					  utu:AutoLayout.PrimaryAlignment="Stretch">
					<utu:AutoLayout utu:AutoLayout.PrimaryAlignment="Stretch">
						<utu:TabBar uen:Region.Attached="True"
									Background="{Binding Entity.Value, Converter={StaticResource TaskListSurfaceBrushConverter}}"
									Style="{StaticResource ColoredTopTabBarStyle}">
							<utu:TabBarItem x:Uid="TaskListPage_TodoTab"
											uen:Region.Name="ToDo"
											utu:AutoLayout.PrimaryAlignment="Stretch"
											Content="To Do" />
							<utu:TabBarItem x:Uid="TaskListPage_CompletedTab"
											uen:Region.Name="Completed"
											utu:AutoLayout.PrimaryAlignment="Stretch"
											Content="Completed" />
						</utu:TabBar>
						<utu:AutoLayout Padding="20,10,20,0"
										utu:AutoLayout.PrimaryAlignment="Stretch"
										Spacing="10">
							<Grid uen:Region.Attached="True"
								  uen:Region.Navigator="Visibility"
								  utu:AutoLayout.CounterAlignment="Stretch"
								  utu:AutoLayout.PrimaryAlignment="Stretch">

								<!--
									TODO: Both FeedView should be set to collapsed by default
									However, currently setting them to Collapsed by default results
									in no data being shown. ActiveTasks is in XAML second, to position
									it over the top of the CompletedTasks, since they're currently
									both visible by default
								-->
								<uer:FeedView uen:Region.Name="Completed"
											  utu:AutoLayout.CounterAlignment="Start"
											  utu:AutoLayout.PrimaryAlignment="Stretch"
											  Source="{Binding CompletedTasks}"
											  Visibility="Visible">
									<DataTemplate>
										<ListView uen:Navigation.Request="Task"
												  IsItemClickEnabled="True"
												  ItemsSource="{Binding Data}"
												  SelectionMode="None"
												  Style="{StaticResource TaskListViewStyle}" />
									</DataTemplate>
								</uer:FeedView>

								<!--
									Since both FeedView are Visible at the moment we need a layer
									in between because there are on top of each other
								-->
								<Border HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch"
										Background="{Binding Entity.Value, Converter={StaticResource TaskListSurfaceBrushConverter}}"
										Visibility="{Binding Path=Visibility, ElementName=ActiveTasks}" />

								<uer:FeedView x:Name="ActiveTasks"
											  uen:Region.Name="ToDo"
											  utu:AutoLayout.CounterAlignment="Start"
											  utu:AutoLayout.PrimaryAlignment="Stretch"
											  Source="{Binding ActiveTasks}"
											  Visibility="Visible">
									<DataTemplate>
										<ListView uen:Navigation.Request="Task"
												  IsItemClickEnabled="True"
												  ItemsSource="{Binding Data}"
												  SelectionMode="None"
												  Style="{StaticResource TaskListViewStyle}" />
									</DataTemplate>
								</uer:FeedView>

							</Grid>
						</utu:AutoLayout>
					</utu:AutoLayout>
				</Grid>
				<utu:AutoLayout Margin="0,0,0,20"
								Padding="20,0,20,0"
								utu:AutoLayout.PrimaryLength="60">
					<Button x:Uid="TaskListPage_CreateTaskButton"
							HorizontalContentAlignment="Left"
							Background="{StaticResource OnSurfaceFocusedBrush}"
							Command="{Binding CreateTask}"
							Content="Add a task"
							Foreground="{StaticResource OnPrimaryBrush}"
							Style="{StaticResource TextButtonStyle}">
						<um:ControlExtensions.Icon>
							<PathIcon Data="{StaticResource Icon_Add}" />
						</um:ControlExtensions.Icon>
					</Button>
				</utu:AutoLayout>
			</utu:AutoLayout>
		</utu:AutoLayout>

		<Grid x:Name="TaskDetailsGrid"
			  Grid.Column="1"
			  Visibility="Collapsed">
			<ContentControl x:Name="TaskDetails"
							Grid.Column="1"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
							HorizontalContentAlignment="Stretch"
							VerticalContentAlignment="Stretch"
							uen:Region.Attached="false" />
		</Grid>

		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup>
				<VisualState x:Name="ExtraWide">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="{StaticResource ExtraWideMinWindowWidth}" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="TaskListColumn.Width"
								Value="2*" />
						<Setter Target="TaskColumn.Width"
								Value="*" />
						<Setter Target="TaskDetailsGrid.Visibility"
								Value="Visible" />
						<Setter Target="TaskDetails.(uen:Region.Attached)"
								Value="true" />
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="Wide">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWindowWidth}" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="TaskListColumn.Width"
								Value="*" />
						<Setter Target="TaskListColumn.MinWidth"
								Value="300" />
						<Setter Target="TaskColumn.Width"
								Value="2*" />
						<Setter Target="TaskDetailsGrid.Visibility"
								Value="Visible" />
						<Setter Target="TaskDetails.(uen:Region.Attached)"
								Value="true" />
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="Narrow">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="0" />
					</VisualState.StateTriggers>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>
	</Grid>
</Page>
